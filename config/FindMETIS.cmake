# CMake script for finding METIS

# If libraries are already defined, do nothing 
IF(METIS_LIB AND METIS_INCLUDE_DIR)
  SET(METIS_FOUND TRUE)
  RETURN()
ENDIF()

SET(METIS_FOUND FALSE)
MESSAGE(STATUS "Finding METIS")

# Try to find METIS
SET(METISINCLUDE 
  "${METISROOT}/include"
  "$ENV{METISROOT}/include"
  "$ENV{METIS_ROOT}/include"
  "$ENV{PARMETISROOT}/include"
  "$ENV{PARMETIS_ROOT}/include"
  "${CMAKE_SOURCE_DIR}/metis/include"
  INTERNAL)

SET(METIS_INCLUDENAME "metis.h" "parmetis.h" INTERNAL)
FIND_PATH(METIS_INCLUDE_DIR
  NAMES
  ${METIS_INCLUDENAME} 
  HINTS 
  ${METISINCLUDE}
  )

SET(METISLIB
  "${METISROOT}/lib"
  "$ENV{METISROOT}/lib"
  "$ENV{METIS_ROOT}/lib"
  "$ENV{PARMETISROOT}/lib"
  "$ENV{PARMETIS_ROOT}/lib"
  "${CMAKE_SOURCE_DIR}/metis/lib"
  INTERNAL)

FIND_LIBRARY(METIS_LIB 
  metis
  HINTS
  ${METISLIB})

IF (METIS_LIB AND METIS_INCLUDE_DIR)
  SET(METIS_FOUND TRUE)
ENDIF()

IF (METIS_FOUND) 
  IF (NOT METIS_FIND_QUIETLY)
    MESSAGE(STATUS "A library with METIS API found.")
    MESSAGE(STATUS "METIS include dir: ${METIS_INCLUDE_DIR}")
    MESSAGE(STATUS "METIS libraries: ${METIS_LIB}")
  ENDIF()
ELSE()
  IF (METIS_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "METIS libraries not found.")
  ENDIF()
ENDIF()

MARK_AS_ADVANCED(
  METISINCLUDE
  METISLIB
  METIS_INCLUDENAME
  METIS_INCLUDE_DIR 
  METIS_LIB 
  )